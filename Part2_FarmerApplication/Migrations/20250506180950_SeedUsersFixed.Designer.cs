// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Part2_FarmerApplication.Services;

#nullable disable

namespace Part2_FarmerApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506180950_SeedUsersFixed")]
    partial class SeedUsersFixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Part2_FarmerApplication.Models.AdminModel", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminID = 1,
                            Email = "admin@example.com",
                            Name = "Admin User",
                            Password = "admin123",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("Part2_FarmerApplication.Models.FarmerModel", b =>
                {
                    b.Property<int>("FarmerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdminID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ContactNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FarmerID");

                    b.HasIndex("AdminID");

                    b.ToTable("Farmers");

                    b.HasData(
                        new
                        {
                            FarmerID = 1,
                            AdminID = 1,
                            City = "GreenVille",
                            ContactNumber = 1234567890,
                            Email = "farmer@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "farmer123",
                            Role = "Farmer"
                        });
                });

            modelBuilder.Entity("Part2_FarmerApplication.Models.ProductsModel", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FarmerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductID");

                    b.HasIndex("FarmerID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Part2_FarmerApplication.Models.FarmerModel", b =>
                {
                    b.HasOne("Part2_FarmerApplication.Models.AdminModel", "Admin")
                        .WithMany("Farmers")
                        .HasForeignKey("AdminID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("Part2_FarmerApplication.Models.ProductsModel", b =>
                {
                    b.HasOne("Part2_FarmerApplication.Models.FarmerModel", "Farmer")
                        .WithMany("Products")
                        .HasForeignKey("FarmerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farmer");
                });

            modelBuilder.Entity("Part2_FarmerApplication.Models.AdminModel", b =>
                {
                    b.Navigation("Farmers");
                });

            modelBuilder.Entity("Part2_FarmerApplication.Models.FarmerModel", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
